plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	flatDir {
		dirs 'lib'
	}
	maven {
		name = "meteor-maven"
		url = "https://maven.meteordev.org/releases"
	}
	maven {
		name = "meteor-maven-snapshots"
		url = "https://maven.meteordev.org/snapshots"
	}
	maven {
		name = "jitpack.io"
		url = "https://jitpack.io"
	}
	repositories {
		maven {
			name = 'Ladysnake Mods'
			url = 'https://maven.ladysnake.org/releases'
			content {
				includeGroup 'io.github.ladysnake'
				includeGroup 'org.ladysnake'
				includeGroupByRegex 'dev\\.onyxstudios.*'
			}
		}
	}
	mavenCentral()
	jcenter()
}

configurations {
	libImpl
	modImpl
}

dependencies {
	//implementation files('C:\\Users\\Администратор\\Desktop\\nicer\\libs\\reflections-0.10.2.jar')

	// To change the versions see the gradle.properties file
	minecraft("com.mojang:minecraft:${project.minecraft_version}")
	mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
	modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")
	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
	modImplementation("org.reflections:reflections:0.10.2")
	modImplementation("org.ladysnake:satin:1.5.1")
	//modImplementation("baritone:fabric:${project.minecraft_version}-SNAPSHOT")
	include("org.ladysnake:satin:1.5.1")
	libImpl(group: "com.squareup.okhttp3", name: "okhttp", version: "4.10.0")
	libImpl(group: "org.json", name: "json", version: "20090211")

	// Lombok
	compileOnly(group: "org.projectlombok", name: "lombok", version: "1.18.28")
	annotationProcessor(group: "org.projectlombok", name: "lombok", version: "1.18.28")
	//compile group: 'com.sun.jna', name: 'jna', version: '3.0.9'
//Thanks for using https://jar-download.com

	libImpl(group: "com.github.oshi", name: "oshi-core-java11", version: "5.8.5")
	libImpl(group: "javazoom", name: "jlayer", version: "1.0.1")
	//modImpl(name: "satin-1.5.1")
	//libImpl(group: "org.reflections", name: "reflections", version: "0.10.2")
//Thanks for using https://jar-download.com

	// 3rd party
	// 	modImpl(group: "io.github.ladysnake", name: "satin", version: "1.9.0") {
//		transitive = false
//	}

//	modImpl(name: "renderer")
//	modImpl(name: "satin-1.15.0")
//	modImpl(name: "baritone")
//	modImpl(name: "api")
//	modImpl(name: "account")
//	modImpl(name: "versions")

	configurations.libImpl.dependencies.each {
		implementation(it)
//		include(it)
	}

	configurations.modImpl.dependencies.each {
		modImplementation(it)
//		implementation(it)
		include(it)
	}
}

loom {
	//accessWidenerPath = file("src/main/resources/BLOODY.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}

	from {
		configurations.libImpl.collect { it.isDirectory() ? it : zipTree(it) }
	}
	duplicatesStrategy(DuplicatesStrategy.EXCLUDE)

}